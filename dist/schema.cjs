'use strict';

var cuid2 = require('@paralleldrive/cuid2');
var drizzleOrm = require('drizzle-orm');
var pgCore = require('drizzle-orm/pg-core');

var o=pgCore.pgTableCreator(e=>`${e}`),z=pgCore.pgEnum("faculty",["FITB","FMIPA","FSRD","FTMD","FTTM","FTSL","FTI","SAPPK","SBM","SF","SITH","STEI"]),O=pgCore.pgEnum("lembaga",["HMJ","Unit"]),D=pgCore.pgEnum("role",["Peserta","Mentor","Mamet"]),F=pgCore.pgEnum("gender",["Male","Female"]),P=pgCore.pgEnum("campus",["Ganesha","Jatinangor","Cirebon"]),M=pgCore.pgEnum("assignmentType",["Daily","Side"]),C=pgCore.pgEnum("presenceType",["Hadir","Izin/Sakit","Alpha"]),k=pgCore.pgEnum("day",["Day 1","Day 2","Day 3","Day 4"]),K=pgCore.pgEnum("presenceEvent",["Opening","Closing"]),B=pgCore.pgEnum("classDay",["Day 1","Day 2"]),t=o("users",{id:pgCore.text("id").primaryKey().$defaultFn(cuid2.createId),nim:pgCore.varchar("nim",{length:100}).unique().notNull(),role:D("role").notNull(),password:pgCore.varchar("password",{length:255}).notNull(),createdAt:pgCore.timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),updatedAt:pgCore.timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull()},e=>({idIdx:pgCore.index().on(e.id),nimIdx:pgCore.index().on(e.nim)})),H=drizzleOrm.relations(t,({many:e,one:l})=>({profile:l(v),userMatchesAsFirstUser:e(c,{relationName:"firstUser"}),userMatchesAsSecondUser:e(c,{relationName:"secondUser"}),messages:e(p,{relationName:"sender"}),messagesAsReceiver:e(p,{relationName:"receiver"}),resetToken:l(A),chosenClass:l(b)})),v=o("profiles",{name:pgCore.varchar("name",{length:255}).notNull(),userId:pgCore.text("userId").notNull().references(()=>t.id,{onDelete:"cascade"}),faculty:z("faculty").notNull(),gender:F("gender").notNull(),campus:P("campus").notNull(),updatedAt:pgCore.timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull(),profileImage:pgCore.text("profileImage"),groupNumber:pgCore.integer("groupNumber").notNull(),point:pgCore.integer("point"),instagram:pgCore.varchar("instagram",{length:255}),chosenClass:pgCore.varchar("chosenClass",{length:255}).references(()=>b.id)},e=>({userIdIdx:pgCore.index().on(e.userId),pointIdx:pgCore.index().on(e.point)})),L=drizzleOrm.relations(v,({one:e})=>({users:e(t,{fields:[v.userId],references:[t.id]})})),A=o("resetTokens",{userId:pgCore.text("id").primaryKey().references(()=>t.id),value:pgCore.text("value"),createdAt:pgCore.timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),expiredTime:pgCore.integer("expiredTime").default(3600)}),G=drizzleOrm.relations(A,({one:e})=>({userId:e(t,{fields:[A.userId],references:[t.id]})})),c=o("userMatches",{id:pgCore.text("id").primaryKey().$defaultFn(cuid2.createId),firstUserId:pgCore.text("firstUserId").notNull().references(()=>t.id,{onDelete:"cascade"}),secondUserId:pgCore.text("secondUserId").notNull().references(()=>t.id,{onDelete:"cascade"}),topic:pgCore.varchar("topic",{length:50}).notNull(),isRevealed:pgCore.boolean("isRevealed").notNull().default(drizzleOrm.sql`false`),isAnonymous:pgCore.boolean("isAnonymous").notNull().default(drizzleOrm.sql`false`),createdAt:pgCore.timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),endedAt:pgCore.timestamp("endedAt",{mode:"date",withTimezone:!0}).default(drizzleOrm.sql`null`).$type()}),J=drizzleOrm.relations(c,({many:e,one:l})=>({firstUser:l(t,{fields:[c.firstUserId],references:[t.id],relationName:"firstUser"}),secondUser:l(t,{fields:[c.secondUserId],references:[t.id],relationName:"secondUser"}),messages:e(p)})),p=o("messages",{id:pgCore.text("id").primaryKey().$defaultFn(cuid2.createId),senderId:pgCore.text("senderId").notNull().references(()=>t.id),receiverId:pgCore.text("receiverId").notNull().references(()=>t.id),content:pgCore.text("content").notNull(),isRead:pgCore.boolean("isRead").notNull().default(drizzleOrm.sql`false`),createdAt:pgCore.timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),userMatchId:pgCore.text("userMatchId").notNull().references(()=>c.id,{onDelete:"cascade"})}),Y=drizzleOrm.relations(p,({many:e,one:l})=>({senderId:l(t,{fields:[p.senderId],references:[t.id],relationName:"sender"}),receiverId:l(t,{fields:[p.receiverId],references:[t.id],relationName:"receiver"}),userMatch:l(c,{fields:[p.userMatchId],references:[c.id]})})),S=o("assignments",{id:pgCore.text("id").primaryKey().$defaultFn(cuid2.createId),title:pgCore.varchar("title",{length:255}).notNull(),description:pgCore.text("description").notNull(),startTime:pgCore.timestamp("startTime",{mode:"date",withTimezone:!0}),deadline:pgCore.timestamp("deadline",{mode:"date",withTimezone:!0}).notNull(),files:pgCore.varchar("files",{length:255}).array().default(drizzleOrm.sql`ARRAY[]::varchar[]`),assignmentType:M("assignmentType").notNull(),point:pgCore.integer("point"),createdAt:pgCore.timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),updatedAt:pgCore.timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull()}),T=o("assignmentSubmissions",{id:pgCore.text("id").primaryKey().$defaultFn(cuid2.createId),point:pgCore.integer("point"),assignmentId:pgCore.text("assignmentId").notNull().references(()=>S.id,{onDelete:"cascade"}),userNim:pgCore.varchar("userNim",{length:100}).notNull().references(()=>t.nim,{onDelete:"cascade",onUpdate:"cascade"}),files:pgCore.varchar("files",{length:255}).array().default(drizzleOrm.sql`ARRAY[]::varchar[]`),createdAt:pgCore.timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),updatedAt:pgCore.timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull()},e=>({userIdIdx:pgCore.index("submission_userId_idx").on(e.userNim)})),j=drizzleOrm.relations(T,({one:e})=>({assignment:e(S,{fields:[T.assignmentId],references:[S.id]}),user:e(t,{fields:[T.userNim],references:[t.nim]})})),w=o("characters",{name:pgCore.varchar("name",{length:255}).notNull().primaryKey(),characterImage:pgCore.varchar("characterImage",{length:255}).notNull()}),d=o("events",{id:pgCore.text("id").primaryKey().$defaultFn(cuid2.createId),day:k("day").notNull(),eventDate:pgCore.date("eventDate",{mode:"date"}).notNull(),openingOpenPresenceTime:pgCore.time("openingOpenPresenceTime").notNull(),openingClosePresenceTime:pgCore.time("openingClosePresenceTime").notNull(),closingOpenPresenceTime:pgCore.time("closingOpenPresenceTime").notNull(),closingClosePresenceTime:pgCore.time("closingClosePresenceTime").notNull(),createdAt:pgCore.timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),updatedAt:pgCore.timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull(),lore:pgCore.text("lore").notNull(),characterName:pgCore.varchar("characterName",{length:255}).notNull().references(()=>w.name),guideBook:pgCore.varchar("guideBook",{length:255}).notNull(),youtubeVideo:pgCore.varchar("youtubeVideo",{length:255}).notNull()},e=>({uniqueDayConstraint:pgCore.unique().on(e.day)})),Q=drizzleOrm.relations(d,({one:e})=>({characters:e(w,{fields:[d.characterName],references:[w.name]})})),W=drizzleOrm.relations(d,({many:e})=>({eventPresences:e(h)})),h=o("eventPresence",{id:pgCore.text("id").primaryKey().$defaultFn(cuid2.createId),eventId:pgCore.text("eventId").notNull().references(()=>d.id),userNim:pgCore.varchar("userNim",{length:255}).notNull().references(()=>t.nim),presenceType:C("presenceType").notNull(),presenceEvent:K("presenceEvent").notNull(),createdAt:pgCore.timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),updatedAt:pgCore.timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull()},e=>({eventIdIdx:pgCore.index("presence_eventId_idx").on(e.eventId),userIdIdx:pgCore.index("presence_userId_idx").on(e.userNim),uniquePresenceConstraint:pgCore.unique().on(e.eventId,e.presenceEvent,e.userNim)})),X=drizzleOrm.relations(h,({one:e})=>({event:e(d,{fields:[h.eventId],references:[d.id]}),user:e(t,{fields:[h.userNim],references:[t.nim]})})),b=o("classes",{id:pgCore.text("id").primaryKey().$defaultFn(cuid2.createId),title:pgCore.varchar("title",{length:255}).notNull(),topic:pgCore.varchar("topic",{length:100}),description:pgCore.text("description").notNull(),speaker:pgCore.varchar("speaker",{length:100}).notNull(),location:pgCore.varchar("location",{length:100}).notNull(),date:pgCore.timestamp("date",{mode:"date",withTimezone:!0}).notNull(),totalSeats:pgCore.integer("totalSeats").notNull(),reservedSeats:pgCore.integer("reservedSeats").default(0)}),Z=drizzleOrm.relations(b,({many:e})=>({users:e(t)})),y=o("postTests",{id:pgCore.text("id").primaryKey().$defaultFn(cuid2.createId),title:pgCore.varchar("title",{length:255}).notNull(),description:pgCore.text("description").notNull(),startTime:pgCore.timestamp("startTime",{mode:"date",withTimezone:!0}),deadline:pgCore.timestamp("deadline",{mode:"date",withTimezone:!0}).notNull(),googleFormLink:pgCore.varchar("googleFormLink",{length:255}).notNull(),eventId:pgCore.text("eventId").notNull().references(()=>d.id)}),x=o("postTestSubmissions",{postTestId:pgCore.text("postTestId").notNull().references(()=>y.id),userNim:pgCore.varchar("userNim",{length:100}).notNull().references(()=>t.nim),createdAt:pgCore.timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow()},e=>({pk:pgCore.primaryKey({columns:[e.postTestId,e.userNim]}),userNimIdx:pgCore.index("submission_usernim_idx").on(e.userNim)})),ee=drizzleOrm.relations(y,({one:e})=>({event:e(d,{fields:[y.eventId],references:[d.id]})})),te=drizzleOrm.relations(x,({one:e})=>({postTest:e(y,{fields:[x.postTestId],references:[y.id]}),user:e(t,{fields:[x.userNim],references:[t.nim]})}));

exports.assignmentSubmissions = T;
exports.assignmentSubmissionsRelations = j;
exports.assignmentTypeEnum = M;
exports.assignments = S;
exports.campusEnum = P;
exports.characters = w;
exports.classDayEnum = B;
exports.classUserRelations = Z;
exports.classes = b;
exports.createTable = o;
exports.eventDayEnum = k;
exports.eventPresences = h;
exports.eventPresencesRelations = X;
exports.events = d;
exports.eventsCharactersRelations = Q;
exports.eventsRelations = W;
exports.facultyEnum = z;
exports.genderEnum = F;
exports.lembagaEnum = O;
exports.messages = p;
exports.messagesRelations = Y;
exports.postTestRelations = ee;
exports.postTestSubmissionRelations = te;
exports.postTestSubmissions = x;
exports.postTests = y;
exports.presenceEventEnum = K;
exports.presenceTypeEnum = C;
exports.profiles = v;
exports.profilesRelations = L;
exports.resetTokenRelations = G;
exports.resetTokens = A;
exports.roleEnum = D;
exports.userMatches = c;
exports.userMatchesRelations = J;
exports.users = t;
exports.usersRelations = H;
