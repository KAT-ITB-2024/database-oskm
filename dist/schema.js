import { createId } from '@paralleldrive/cuid2';
import { relations, sql } from 'drizzle-orm';
import { pgTableCreator, pgEnum, text, varchar, timestamp, index, integer, boolean, date, time, unique } from 'drizzle-orm/pg-core';

var o=pgTableCreator(e=>`${e}`),D=pgEnum("faculty",["FITB","FMIPA","FSRD","FTMD","FTTM","FTSL","FTI","SAPPK","SBM","SF","SITH","STEI"]),P=pgEnum("role",["Peserta","Mentor","Mamet"]),$=pgEnum("gender",["male","female"]),F=pgEnum("campus",["Ganesha","Jatinangor","Cirebon"]),M=pgEnum("assignmentType",["daily","side"]),z=pgEnum("presenceType",["Hadir","Izin/Sakit","Alpha"]),R=pgEnum("day",["Day 1","Day 2","Day 3","Day 4","Day 5"]),U=pgEnum("presenceEvent",["Opening","Closing"]),n=o("users",{id:text("id").primaryKey().$defaultFn(createId),nim:varchar("nim",{length:100}).unique().notNull(),role:P("role").notNull(),password:varchar("password",{length:255}).notNull(),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull().defaultNow()},e=>({idIdx:index().on(e.id),nimIdx:index().on(e.nim)})),_=relations(n,({many:e,one:d})=>({profile:d(v),userMatchesAsFirstUser:e(l),userMatchesAsSecondUser:e(l),messages:e(p)})),v=o("profiles",{name:varchar("name",{length:255}).notNull(),userId:text("userId").notNull().references(()=>n.id,{onDelete:"cascade"}),faculty:D("faculty").notNull(),gender:$("gender").notNull(),campus:F("campus").notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),profileImage:text("profileImage"),groupNumber:integer("groupNumber").notNull(),point:integer("point")},e=>({userIdIdx:index().on(e.userId),pointIdx:index().on(e.point)})),q=relations(v,({one:e})=>({users:e(n,{fields:[v.userId],references:[n.id]})})),l=o("userMatches",{id:text("id").primaryKey().$defaultFn(createId),firstUserId:text("firstUserId").notNull().references(()=>n.id,{onDelete:"cascade"}),secondUserId:text("secondUserId").notNull().references(()=>n.id,{onDelete:"cascade"}),topic:varchar("topic",{length:50}).notNull(),isRevealed:boolean("isRevealed").notNull().default(sql`false`),isAnonymous:boolean("isAnonymous").notNull().default(sql`false`),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),endedAt:timestamp("endedAt",{mode:"date",withTimezone:!0}).default(sql`null`).$type()}),O=relations(l,({many:e,one:d})=>({firstUser:d(n,{fields:[l.firstUserId],references:[n.id]}),secondUser:d(n,{fields:[l.secondUserId],references:[n.id]}),messages:e(p)})),p=o("messages",{id:text("id").primaryKey().$defaultFn(createId),senderId:text("senderId").notNull().references(()=>n.id),receiverId:text("receiverId").notNull().references(()=>n.id),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),userMatchId:text("userMatchId").notNull().references(()=>l.id,{onDelete:"cascade"})}),V=relations(p,({many:e,one:d})=>({senderId:d(n,{fields:[p.senderId],references:[n.id]}),receiverId:d(n,{fields:[p.receiverId],references:[n.id]}),userMatch:d(l,{fields:[p.userMatchId],references:[l.id]})})),f=o("assignments",{id:text("id").primaryKey().$defaultFn(createId),title:varchar("title",{length:255}).notNull(),description:text("description").notNull(),startTime:timestamp("startTime",{mode:"date",withTimezone:!0}),deadline:timestamp("deadline",{mode:"date",withTimezone:!0}).notNull(),files:varchar("files",{length:255}).array().default(sql`ARRAY[]::varchar[]`),assignmentType:M("assignmentType").notNull(),point:integer("point"),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull()}),x=o("assignmentSubmissions",{id:text("id").primaryKey().$defaultFn(createId),assignmentId:text("assignmentId").notNull().references(()=>f.id,{onDelete:"cascade"}),userNim:varchar("userNim",{length:100}).notNull().references(()=>n.nim,{onDelete:"cascade",onUpdate:"cascade"}),files:varchar("files",{length:255}).array().default(sql`ARRAY[]::varchar[]`),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull()},e=>({userIdIdx:index("submission_userId_idx").on(e.userNim)})),B=relations(x,({one:e})=>({assignment:e(f,{fields:[x.assignmentId],references:[f.id]}),user:e(n,{fields:[x.userNim],references:[n.nim]})})),A=o("character",{name:varchar("name",{length:255}).notNull().primaryKey(),characterImage:varchar("characterImage",{length:255}).notNull()}),i=o("event",{id:text("id").primaryKey().$defaultFn(createId),day:R("day").notNull(),reward:integer("rewatd").notNull().default(0),eventDate:date("eventDate",{mode:"date"}).notNull(),openingOpenPresenceTime:time("openingOpenPresenceTime").notNull(),openingClosePresenceTime:time("openingClosePresenceTime").notNull(),closingOpenPresenceTime:time("closingOpenPresenceTime").notNull(),closingClosePresenceTime:time("closingClosePresenceTime").notNull(),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull(),lore:text("lore").notNull(),characterName:varchar("characterName",{length:255}).notNull().references(()=>A.name)},e=>({uniqueDayConstraint:unique().on(e.day)})),G=relations(i,({one:e})=>({character:e(A,{fields:[i.characterName],references:[A.name]})})),H=relations(i,({many:e})=>({eventPresences:e(N),eventAssignments:e(I)})),N=o("eventPresence",{id:text("id").primaryKey().$defaultFn(createId),eventId:text("eventId").notNull().references(()=>i.id),userNim:varchar("userNim",{length:255}).notNull().references(()=>n.nim),presenceType:z("presenceType").notNull(),presenceEvent:U("presenceEvent").notNull(),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),profileImage:text("profileImage")},e=>({eventIdIdx:index("presence_eventId_idx").on(e.eventId),userIdIdx:index("presence_userId_idx").on(e.userNim),uniquePresenceConstraint:unique().on(e.eventId,e.presenceEvent,e.userNim)})),Y=relations(N,({one:e})=>({event:e(i,{fields:[N.eventId],references:[i.id]}),user:e(n,{fields:[N.userNim],references:[n.nim]})})),I=o("eventAssignments",{id:text("id").primaryKey().$defaultFn(createId),eventId:text("eventId").notNull().references(()=>i.id,{onDelete:"cascade"}),assignmentId:text("assignmentId").notNull().references(()=>f.id,{onDelete:"cascade"})}),k=relations(I,({one:e})=>({event:e(i,{fields:[I.eventId],references:[i.id]}),assignment:e(f,{fields:[I.assignmentId],references:[f.id]})}));

export { x as assignmentSubmissions, B as assignmentSubmissionsRelations, M as assignmentTypeEnum, f as assignments, F as campusEnum, A as character, o as createTable, I as eventAssignments, k as eventAssignmentsRelations, R as eventDayEnum, N as eventPresences, Y as eventPresencesRelations, i as events, G as eventsCharacterRelations, H as eventsRelations, D as facultyEnum, $ as genderEnum, p as messages, V as messagesRelations, U as presenceEventEnum, z as presenceTypeEnum, v as profiles, q as profilesRelations, P as roleEnum, l as userMatches, O as userMatchesRelations, n as users, _ as usersRelations };
