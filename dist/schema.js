import { sql, relations } from 'drizzle-orm';
import { pgTableCreator, varchar, timestamp, text, integer, primaryKey, index } from 'drizzle-orm/pg-core';

var i=pgTableCreator(t=>`${t}`),n=i("user",{id:varchar("id",{length:255}).notNull().primaryKey(),name:varchar("name",{length:255}),email:varchar("email",{length:255}).notNull(),emailVerified:timestamp("emailVerified",{mode:"date",withTimezone:!0}).default(sql`CURRENT_TIMESTAMP`),image:varchar("image",{length:255})}),f=relations(n,({many:t})=>({accounts:t(r)})),r=i("account",{userId:varchar("userId",{length:255}).notNull().references(()=>n.id),type:varchar("type",{length:255}).notNull(),provider:varchar("provider",{length:255}).notNull(),providerAccountId:varchar("providerAccountId",{length:255}).notNull(),refresh_token:text("refresh_token"),access_token:text("access_token"),expires_at:integer("expires_at"),token_type:varchar("token_type",{length:255}),scope:varchar("scope",{length:255}),id_token:text("id_token"),session_state:varchar("session_state",{length:255})},t=>({compoundKey:primaryKey({columns:[t.provider,t.providerAccountId]}),userIdIdx:index("account_userId_idx").on(t.userId)})),_=relations(r,({one:t})=>({user:t(n,{fields:[r.userId],references:[n.id]})})),x=i("verificationToken",{identifier:varchar("identifier",{length:255}).notNull(),token:varchar("token",{length:255}).notNull(),expires:timestamp("expires",{mode:"date",withTimezone:!0}).notNull()},t=>({compoundKey:primaryKey({columns:[t.identifier,t.token]})}));

export { r as accounts, _ as accountsRelations, i as createTable, n as users, f as usersRelations, x as verificationTokens };
