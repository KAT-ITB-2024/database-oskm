import { createId } from '@paralleldrive/cuid2';
import { relations, sql } from 'drizzle-orm';
import { pgTableCreator, pgEnum, text, varchar, timestamp, index, integer, boolean, date, time, unique } from 'drizzle-orm/pg-core';

var o=pgTableCreator(e=>`${e}`),U=pgEnum("faculty",["FITB","FMIPA","FSRD","FTMD","FTTM","FTSL","FTI","SAPPK","SBM","SF","SITH","STEI"]),_=pgEnum("lembaga",["HMJ","Unit"]),$=pgEnum("role",["Peserta","Mentor","Mamet"]),D=pgEnum("gender",["Male","Female"]),M=pgEnum("campus",["Ganesha","Jatinangor","Cirebon"]),P=pgEnum("assignmentType",["Daily","Side"]),F=pgEnum("presenceType",["Hadir","Izin/Sakit","Alpha"]),b=pgEnum("day",["Day 1","Day 2","Day 3","Day 4"]),z=pgEnum("presenceEvent",["Opening","Closing"]),t=o("users",{id:text("id").primaryKey().$defaultFn(createId),nim:varchar("nim",{length:100}).unique().notNull(),role:$("role").notNull(),password:varchar("password",{length:255}).notNull(),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull()},e=>({idIdx:index().on(e.id),nimIdx:index().on(e.nim)})),q=relations(t,({many:e,one:a})=>({profile:a(v),userMatchesAsFirstUser:e(u,{relationName:"firstUser"}),userMatchesAsSecondUser:e(u,{relationName:"secondUser"}),messages:e(m,{relationName:"sender"}),messagesAsReceiver:e(m,{relationName:"receiver"}),resetToken:a(A)})),v=o("profiles",{name:varchar("name",{length:255}).notNull(),userId:text("userId").notNull().references(()=>t.id,{onDelete:"cascade"}),faculty:U("faculty").notNull(),gender:D("gender").notNull(),campus:M("campus").notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull(),profileImage:text("profileImage"),groupNumber:integer("groupNumber").notNull(),point:integer("point")},e=>({userIdIdx:index().on(e.userId),pointIdx:index().on(e.point)})),O=relations(v,({one:e})=>({users:e(t,{fields:[v.userId],references:[t.id]})})),A=o("resetTokens",{userId:text("id").primaryKey().references(()=>t.id),value:text("value"),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),expiredTime:integer("expiredTime").default(3600)}),B=relations(A,({one:e})=>({userId:e(t,{fields:[A.userId],references:[t.id]})})),u=o("userMatches",{id:text("id").primaryKey().$defaultFn(createId),firstUserId:text("firstUserId").notNull().references(()=>t.id,{onDelete:"cascade"}),secondUserId:text("secondUserId").notNull().references(()=>t.id,{onDelete:"cascade"}),topic:varchar("topic",{length:50}).notNull(),isRevealed:boolean("isRevealed").notNull().default(sql`false`),isAnonymous:boolean("isAnonymous").notNull().default(sql`false`),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),endedAt:timestamp("endedAt",{mode:"date",withTimezone:!0}).default(sql`null`).$type()}),V=relations(u,({many:e,one:a})=>({firstUser:a(t,{fields:[u.firstUserId],references:[t.id],relationName:"firstUser"}),secondUser:a(t,{fields:[u.secondUserId],references:[t.id],relationName:"secondUser"}),messages:e(m)})),m=o("messages",{id:text("id").primaryKey().$defaultFn(createId),senderId:text("senderId").notNull().references(()=>t.id),receiverId:text("receiverId").notNull().references(()=>t.id),content:text("content").notNull(),isRead:boolean("isRead").notNull().default(sql`false`),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),userMatchId:text("userMatchId").notNull().references(()=>u.id,{onDelete:"cascade"})}),H=relations(m,({many:e,one:a})=>({senderId:a(t,{fields:[m.senderId],references:[t.id],relationName:"sender"}),receiverId:a(t,{fields:[m.receiverId],references:[t.id],relationName:"receiver"}),userMatch:a(u,{fields:[m.userMatchId],references:[u.id]})})),N=o("assignments",{id:text("id").primaryKey().$defaultFn(createId),title:varchar("title",{length:255}).notNull(),description:text("description").notNull(),startTime:timestamp("startTime",{mode:"date",withTimezone:!0}),deadline:timestamp("deadline",{mode:"date",withTimezone:!0}).notNull(),files:varchar("files",{length:255}).array().default(sql`ARRAY[]::varchar[]`),assignmentType:P("assignmentType").notNull(),point:integer("point"),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull()}),h=o("assignmentSubmissions",{id:text("id").primaryKey().$defaultFn(createId),assignmentId:text("assignmentId").notNull().references(()=>N.id,{onDelete:"cascade"}),userNim:varchar("userNim",{length:100}).notNull().references(()=>t.nim,{onDelete:"cascade",onUpdate:"cascade"}),files:varchar("files",{length:255}).array().default(sql`ARRAY[]::varchar[]`),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull()},e=>({userIdIdx:index("submission_userId_idx").on(e.userNim)})),G=relations(h,({one:e})=>({assignment:e(N,{fields:[h.assignmentId],references:[N.id]}),user:e(t,{fields:[h.userNim],references:[t.nim]})})),S=o("characters",{name:varchar("name",{length:255}).notNull().primaryKey(),characterImage:varchar("characterImage",{length:255}).notNull()}),d=o("event",{id:text("id").primaryKey().$defaultFn(createId),day:b("day").notNull(),eventDate:date("eventDate",{mode:"date"}).notNull(),openingOpenPresenceTime:time("openingOpenPresenceTime").notNull(),openingClosePresenceTime:time("openingClosePresenceTime").notNull(),closingOpenPresenceTime:time("closingOpenPresenceTime").notNull(),closingClosePresenceTime:time("closingClosePresenceTime").notNull(),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull(),lore:text("lore").notNull(),characterName:varchar("characterName",{length:255}).notNull().references(()=>S.name),guideBook:varchar("guideBook",{length:255}).notNull()},e=>({uniqueDayConstraint:unique().on(e.day)})),J=relations(d,({one:e})=>({characters:e(S,{fields:[d.characterName],references:[S.name]})})),Y=relations(d,({many:e})=>({eventPresences:e(y),eventAssignments:e(I)})),y=o("eventPresence",{id:text("id").primaryKey().$defaultFn(createId),eventId:text("eventId").notNull().references(()=>d.id),userNim:varchar("userNim",{length:255}).notNull().references(()=>t.nim),presenceType:F("presenceType").notNull(),presenceEvent:z("presenceEvent").notNull(),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull()},e=>({eventIdIdx:index("presence_eventId_idx").on(e.eventId),userIdIdx:index("presence_userId_idx").on(e.userNim),uniquePresenceConstraint:unique().on(e.eventId,e.presenceEvent,e.userNim)})),L=relations(y,({one:e})=>({event:e(d,{fields:[y.eventId],references:[d.id]}),user:e(t,{fields:[y.userNim],references:[t.nim]})})),I=o("eventAssignments",{id:text("id").primaryKey().$defaultFn(createId),eventId:text("eventId").notNull().references(()=>d.id,{onDelete:"cascade"}),assignmentId:text("assignmentId").notNull().references(()=>N.id,{onDelete:"cascade"})}),j=relations(I,({one:e})=>({event:e(d,{fields:[I.eventId],references:[d.id]}),assignment:e(N,{fields:[I.assignmentId],references:[N.id]})}));

export { h as assignmentSubmissions, G as assignmentSubmissionsRelations, P as assignmentTypeEnum, N as assignments, M as campusEnum, S as characters, o as createTable, I as eventAssignments, j as eventAssignmentsRelations, b as eventDayEnum, y as eventPresences, L as eventPresencesRelations, d as events, J as eventsCharactersRelations, Y as eventsRelations, U as facultyEnum, D as genderEnum, _ as lembagaEnum, m as messages, H as messagesRelations, z as presenceEventEnum, F as presenceTypeEnum, v as profiles, O as profilesRelations, B as resetTokenRelations, A as resetTokens, $ as roleEnum, u as userMatches, V as userMatchesRelations, t as users, q as usersRelations };
