import { createId } from '@paralleldrive/cuid2';
import { relations } from 'drizzle-orm';
import { pgTableCreator, pgEnum, text, varchar, timestamp, index } from 'drizzle-orm/pg-core';

var u=pgTableCreator(r=>`${r}`),I=pgEnum("faculties",["FITB","FMIPA","FSRD","FTMD","FTTM","FTSL","FTI","SAPPK","SBM","SF","SITH","STEI"]),y=pgEnum("role",["Peserta","Mentor","Mamet"]),x=pgEnum("gender",["male","female"]),N=pgEnum("campus",["Ganesha","Jatinangor","Cirebon"]),e=u("users",{id:text("id").primaryKey().$defaultFn(createId),nim:varchar("nim",{length:100}).unique().notNull(),role:y("role").notNull(),password:varchar("password",{length:255}).notNull(),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull().defaultNow()},r=>({idIdx:index().on(r.id),nimIdx:index().on(r.nim)})),w=relations(e,({many:r,one:s})=>({profile:s(p),userMatchesAsFirstUser:r(o),userMatchesAsSecondUser:r(o),messages:r(n)})),p=u("profiles",{name:varchar("name",{length:255}).notNull(),userId:text("userId").notNull().references(()=>e.id,{onDelete:"cascade"}),faculty:I("faculty").notNull(),gender:x("gender").notNull(),campus:N("campus").notNull(),updatedAt:timestamp("updatedAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),profileImage:text("profileImage")},r=>({userIdIdx:index().on(r.userId)})),S=relations(p,({one:r})=>({users:r(e,{fields:[p.userId],references:[e.id]})})),o=u("userMatches",{id:text("id").primaryKey().$defaultFn(createId),firstUserId:text("firstUserId").notNull().references(()=>e.id,{onDelete:"cascade"}),secondUserId:text("secondUserId").notNull().references(()=>e.id,{onDelete:"cascade"}),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow()}),E=relations(o,({many:r,one:s})=>({firstUser:s(e,{fields:[o.firstUserId],references:[e.id]}),secondUser:s(e,{fields:[o.secondUserId],references:[e.id]}),messages:r(n)})),n=u("messages",{id:text("id").primaryKey().$defaultFn(createId),senderId:text("senderId").notNull().references(()=>e.id),receiverId:text("receiverId").notNull().references(()=>e.id),createdAt:timestamp("createdAt",{mode:"date",withTimezone:!0}).notNull().defaultNow(),userMatchId:text("userMatchId").notNull().references(()=>o.id,{onDelete:"cascade"})}),$=relations(n,({many:r,one:s})=>({senderId:s(e,{fields:[n.senderId],references:[e.id]}),receiverId:s(e,{fields:[n.receiverId],references:[e.id]}),userMatch:s(o,{fields:[n.userMatchId],references:[o.id]})}));

export { N as campusEnum, u as createTable, I as facultyEnum, x as genderEnum, n as messages, $ as messagesRelations, p as profiles, S as profilesRelations, y as roleEnum, o as userMatches, E as userMatchesRelations, e as users, w as usersRelations };
