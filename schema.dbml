enum assignmentType {
  daily
  side
}

enum campus {
  Ganesha
  Jatinangor
  Cirebon
}

enum day {
  "Day 1"
  "Day 2"
  "Day 3"
  "Day 4"
  "Day 5"
}

enum faculty {
  FITB
  FMIPA
  FSRD
  FTMD
  FTTM
  FTSL
  FTI
  SAPPK
  SBM
  SF
  SITH
  STEI
}

enum gender {
  male
  female
}

enum presenceEvent {
  Opening
  Closing
}

enum presenceType {
  Hadir
  "Izin/Sakit"
  Alpha
}

enum role {
  Peserta
  Mentor
  Mamet
}

table assignmentSubmissions {
  id text [pk, not null]
  assignmentId text [not null]
  userNim varchar(100) [not null]
  files "varchar(255)[]" [default: `ARRAY[]::varchar[]`]
  createdAt "timestamp with time zone" [not null]
  updatedAt "timestamp with time zone" [not null]

  indexes {
    userNim [name: 'submission_userId_idx']
  }
}

table assignments {
  id text [pk, not null]
  title varchar(255) [not null]
  description text [not null]
  startTime "timestamp with time zone"
  deadline "timestamp with time zone" [not null]
  files "varchar(255)[]" [default: `ARRAY[]::varchar[]`]
  assignmentType assignmentType [not null]
  point integer
  createdAt "timestamp with time zone" [not null]
  updatedAt "timestamp with time zone" [not null]
}

table character {
  name varchar(255) [pk, not null]
  characterImage varchar(255) [not null]
}

table eventAssignments {
  id text [pk, not null]
  eventId text [not null]
  assignmentId text [not null]
}

table eventPresence {
  id text [pk, not null]
  eventId text [not null]
  userNim varchar(255) [not null]
  presenceType presenceType [not null]
  presenceEvent presenceEvent [not null]
  createdAt "timestamp with time zone" [not null]
  updatedAt "timestamp with time zone" [not null]

  indexes {
    eventId [name: 'presence_eventId_idx']
    userNim [name: 'presence_userId_idx']
    (eventId, presenceEvent, userNim) [name: 'eventPresence_eventId_presenceEvent_userNim_unique', unique]
  }
}

table event {
  id text [pk, not null]
  day day [not null]
  eventDate date [not null]
  openingOpenPresenceTime time [not null]
  openingClosePresenceTime time [not null]
  closingOpenPresenceTime time [not null]
  closingClosePresenceTime time [not null]
  createdAt "timestamp with time zone" [not null]
  updatedAt "timestamp with time zone" [not null]
  lore text [not null]
  characterName varchar(255) [not null]

  indexes {
    day [name: 'event_day_unique', unique]
  }
}

table messages {
  id text [pk, not null]
  senderId text [not null]
  receiverId text [not null]
  createdAt "timestamp with time zone" [not null, default: `now()`]
  userMatchId text [not null]
}

table profiles {
  name varchar(255) [not null]
  userId text [not null]
  faculty faculty [not null]
  gender gender [not null]
  campus campus [not null]
  updatedAt "timestamp with time zone" [not null, default: `now()`]
  profileImage text
  groupNumber integer [not null]
  point integer

  indexes {
    userId
    point
  }
}

table userMatches {
  id text [pk, not null]
  firstUserId text [not null]
  secondUserId text [not null]
  topic varchar(50) [not null]
  isRevealed boolean [not null, default: `false`]
  isAnonymous boolean [not null, default: `false`]
  createdAt "timestamp with time zone" [not null, default: `now()`]
  endedAt "timestamp with time zone" [default: `null`]
}

table users {
  id text [pk, not null]
  nim varchar(100) [not null, unique]
  role role [not null]
  password varchar(255) [not null]
  createdAt "timestamp with time zone" [not null, default: `now()`]
  updatedAt "timestamp with time zone" [not null, default: `now()`]

  indexes {
    id
    nim
  }
}

ref assignmentSubmissions_assignmentId_assignments_id_fk: assignmentSubmissions.assignmentId > assignments.id [delete: cascade, update: no action]

ref assignmentSubmissions_userNim_users_nim_fk: assignmentSubmissions.userNim > users.nim [delete: cascade, update: cascade]

ref eventAssignments_eventId_event_id_fk: eventAssignments.eventId > event.id [delete: cascade, update: no action]

ref eventAssignments_assignmentId_assignments_id_fk: eventAssignments.assignmentId > assignments.id [delete: cascade, update: no action]

ref eventPresence_eventId_event_id_fk: eventPresence.eventId > event.id [delete: no action, update: no action]

ref eventPresence_userNim_users_nim_fk: eventPresence.userNim > users.nim [delete: no action, update: no action]

ref event_characterName_character_name_fk: event.characterName > character.name [delete: no action, update: no action]

ref messages_senderId_users_id_fk: messages.senderId > users.id [delete: no action, update: no action]

ref messages_receiverId_users_id_fk: messages.receiverId > users.id [delete: no action, update: no action]

ref messages_userMatchId_userMatches_id_fk: messages.userMatchId > userMatches.id [delete: cascade, update: no action]

ref profiles_userId_users_id_fk: profiles.userId > users.id [delete: cascade, update: no action]

ref userMatches_firstUserId_users_id_fk: userMatches.firstUserId > users.id [delete: cascade, update: no action]

ref userMatches_secondUserId_users_id_fk: userMatches.secondUserId > users.id [delete: cascade, update: no action]